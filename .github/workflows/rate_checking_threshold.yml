name: Pylint and ESLint Quality Check

on: [push, pull_request]

jobs:
  quality-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Run Pylint and Extract Score
        run: |
            pylint_output=$(pylint python_code/app.py || true)
            echo "$pylint_output"
            pylint_score=$(echo "$pylint_output" | grep -oP '(?<=rated at )[-+]?[0-9]*\.?[0-9]+')
            echo "Extracted Pylint Score: $pylint_score"
            echo "pylint_score=$pylint_score" >> $GITHUB_ENV
        

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install ESLint
        run: |
          npm init -y
          npm install eslint@9 --save-dev

          # Create a valid eslint.config.js
          cat <<EOL > eslint.config.js
          export default [
            {
              ignores: ["node_modules/"],
              rules: {
                "no-unused-vars": "warn",
                "no-console": "off"
              },
            },
          ];
          EOL

      - name: Run ESLint and calculate score
        id: eslint_check
        run: |
          # Ensure JS files exist
          if ls *.js 1> /dev/null 2>&1; then
            error_count=$(npx eslint *.js --format json | jq '.[0].errorCount')
          else
            echo "No JavaScript files found!"
            error_count=0
          fi

          eslint_score=$((10 - error_count))
          echo "ESLint Score: $eslint_score"
          echo "eslint_score=$eslint_score" >> $GITHUB_ENV

      - name: Validate Scores
        run: |
          echo "Pylint Score: $pylint_score"
          echo "ESLint Score: $eslint_score"

          # Handle empty or invalid scores
          pylint_score=${pylint_score:-0}
          eslint_score=${eslint_score:-0}

          if (( $(echo "$pylint_score < 9" | bc -l) || $(echo "$eslint_score < 9" | bc -l) )); then
            echo "Rate check failed. Pylint or ESLint score is below 9."
            exit 1
          else
            echo "Rate check passed. Both Pylint and ESLint scores are 9 or above."
          fi
